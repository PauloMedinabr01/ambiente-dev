services:
    application:
        image: application
        build:
            context: .
            dockerfile: dockerfiles/php/Dockerfile
        container_name: application
        working_dir: /var/www
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www:delegated
        networks:
            - application
        restart: always
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000" ]
            interval: 30s
            timeout: 10s
            retries: 3

    nginx:
        image: nginx:latest
        container_name: nginx
        working_dir: /var/www
        ports:
            - "8084:80"
        volumes:
            - ./dockerfiles/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./public:/var/www/public:ro
        networks:
            - application
        restart: always
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 30s
            timeout: 10s
            retries: 3

    mysql:
        image: mysql:latest
        container_name: mysql
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_ALLOW_EMPTY_PASSWORD: '1'
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - application
        restart: always
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_PASSWORD}" ]
            interval: 30s
            timeout: 10s
            retries: 3

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        command: redis-server --requirepass "${REDIS_PASSWORD}"
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        networks:
            - application
        restart: always
        healthcheck:
            test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
            interval: 30s
            timeout: 10s
            retries: 3

networks:
    application:
        driver: bridge

volumes:
    mysql_data:
        driver: local
    redis_data:
        driver: local
